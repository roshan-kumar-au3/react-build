{"version":3,"sources":["store/reducers/leadReducer.js","store/api/lead.js","store/store.js","components/Lead.js","components/ShowAllComponent.js","components/ShowMale.js","components/Navigation.js","components/ShowFemale.js","components/App.js","index.js"],"names":["leadReducer","leads","action","type","fetch","then","data","json","response","console","log","results","store","dispatch","lead","newleads","leadObj","converted","push","leadId","id","email","reducer","combineReducers","count","countReducer","createStore","stateMapper","state","subscribe","getState","LeadComponent","convertedTrue","event","target","value","props","className","this","map","obj","key","style","width","name","onChange","src","picture","large","alt","title","first","last","gender","phone","React","Component","connect","ShowAllComponent","ShowMale","maleArray","filter","Navigation","generateLead","countLead","showAll","to","length","onClick","ShowFemale","App","path","component","Lead","Home","doRedirect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15e75bbb.chunk.js","sourcesContent":["// this file is a reducer to get the lead\r\nimport {\r\n    fetchLead,\r\n} from '../api/lead';\r\n\r\nfunction leadReducer(leads = [], action) {\r\n    if (action.type === \"FETCH_LEAD\") {\r\n            fetchLead();\r\n    }\r\n\r\n    if (action.type === \"LEAD_LOADED\") {\r\n        let newleads = [...leads];\r\n        let leadObj = {...action.lead};\r\n        leadObj.converted = false;\r\n\r\n        console.log(\"leadOject: \", leadObj);\r\n\r\n        console.log(\"inside lead loaded action\",action.lead);\r\n        newleads.push(leadObj);\r\n        leads = newleads;\r\n    }\r\n\r\n    if (action.type === \"LEAD_CONVERTED\") {\r\n        let newleads = [...leads];\r\n        let leadObj;\r\n        let leadId = action.id;\r\n        console.log(leadId);\r\n        for (const lead of newleads) {\r\n            if(lead.email === action.id){\r\n                leadObj = lead;\r\n            }\r\n        }\r\n        leadObj.converted = !(leadObj.converted);\r\n        newleads = [...leads]\r\n        console.log(leadObj);\r\n        leads = newleads\r\n    }\r\n\r\n    // if (action.type === \"LEAD_CONVERTED_COUNT\") {\r\n    //     let newleads = [...leads];\r\n    //     let count = 0;\r\n    //      for (const lead of newleads) {\r\n    //          if (lead.converted) {\r\n    //             count++;\r\n    //          }\r\n    //      }\r\n    //      return\r\n    // }\r\n\r\n    return leads\r\n}\r\n\r\nexport default leadReducer;","import {store} from '../store'\r\n\r\nfunction fetchLead() {\r\n    let url = `https://randomuser.me/api/`;\r\n    fetch(url)\r\n        .then((data) => data.json())\r\n        .then(response => {\r\n            console.log(\"lead: \", response.results[0]);\r\n            store.dispatch({\r\n                type: \"LEAD_LOADED\",\r\n                lead: response.results[0]\r\n            })\r\n        })\r\n}\r\n\r\nexport {fetchLead};","import leadReducer from './reducers/leadReducer';\r\nimport countReducer from './reducers/countReducer'\r\nimport {\r\n    combineReducers,\r\n    createStore\r\n} from 'redux';\r\n\r\nlet reducer = combineReducers({\r\n    leads: leadReducer,\r\n    count: countReducer\r\n});\r\n\r\nlet store = createStore(reducer);\r\n\r\nstore.subscribe(() => {\r\n    console.log(\"dispatched: \", store.getState());\r\n})\r\n\r\nfunction stateMapper(state) {\r\n    return state;\r\n}\r\n\r\nexport {\r\n    store,\r\n    stateMapper\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport {connect} from 'react-redux';\r\nimport {stateMapper} from '../store/store';\r\n\r\n\r\nclass LeadComponent extends React.Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    //     this.state = {\r\n            \r\n    //     }\r\n    // }\r\n    convertedTrue = (event) => {\r\n        // console.log(event.target.value);\r\n        // console.log(event.target.checked);\r\n        // return (!event.target.checked)\r\n        // // this.props.dispatch({\r\n        // //     type: \"LEAD_CONVERTED\",\r\n        // //     id: event.target.name\r\n        // // })\r\n        console.log(\"current Student: \", event.target.value);\r\n        this.props.dispatch({\r\n            type: \"LEAD_CONVERTED\",\r\n            id: event.target.value\r\n        })\r\n    }\r\n\r\n    // sendCurrentStudent = (event) => {\r\n    //     console.log(\"current Student: \",event.target.value);\r\n    //     this.props.dispatch({\r\n    //         type: \"LEAD_CONVERTED\",\r\n    //         id: event.target.value\r\n    //     })\r\n    // }\r\n    \r\n\r\n\r\n\r\n  render() {\r\n        return (\r\n        <div className=\"container-fluid\">\r\n            <h3 className=\"text-danger text-center\">All Leads</h3>\r\n                <hr />\r\n        <div className=\"row\">\r\n        {\r\n            this.props.leads.map((obj) => {\r\n                return <div  className=\"col-md-3\" key={obj.email}>\r\n                <div className=\"card\" style= {{\r\n                    width: \"15rem\"\r\n                }}>\r\n                    <label><input type=\"checkbox\"   name={obj.id.value} onChange={this.convertedTrue} value={obj.email} ></input></label>\r\n                    <img src={obj.picture.large}  className=\"card-img-top\" alt=\"...\" />\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">name: {obj.name.title} {obj.name.first} {obj.name.last}  </p>\r\n                        <p className=\"card-text\">gender: {obj.gender}  </p>\r\n                        <p className=\"card-text\">{obj.email}</p>\r\n                        <p className=\"card-text\">phone: {obj.phone}</p>\r\n                        <p>{`converted : ${obj.converted}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            })\r\n        }\r\n        </div>\r\n     </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default connect(stateMapper)(LeadComponent);\r\n//             < label\r\n//                 className=\"form-check-label ml-4 mt-2\"\r\n//                 htmlFor=\"\"\r\n//               >\r\n//                 <p>{this.props.question.options[0].name}</p>\r\n    //             <input\r\n    //                 className=\"form-check-input ml-1 mt-3\"\r\n    //                 type=\"checkbox\"\r\n    //                 value={this.props.question.options[0].name}\r\n    //         \r\n    //               />\r\n//               </label>","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { stateMapper } from '../store/store';\r\n\r\nclass ShowAllComponent extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <h3 className=\"text-danger text-center\">All Students</h3>\r\n                <hr />\r\n                <div className = \"row\" >\r\n                {\r\n                    this.props.leads.map((obj) => {\r\n                        return <div  className=\"col-md-3\" key={obj.email}>\r\n                        <div className=\"card\" style= {{\r\n                            width: \"15rem\"\r\n                        }}>\r\n                            <img src={obj.picture.large}  className=\"card-img-top\" alt=\"...\" />\r\n                            <div className=\"card-body\">\r\n                                <p className=\"card-text\">name: {obj.name.title} {obj.name.first} {obj.name.last}  </p>\r\n                                <p className=\"card-text\">gender: {obj.gender}  </p>\r\n                                <p className=\"card-text\">{obj.email}</p>\r\n                                <p className=\"card-text\">phone: {obj.phone}</p>\r\n                                <p>{`converted : ${obj.converted}`}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(stateMapper)(ShowAllComponent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { stateMapper } from '../store/store';\r\n\r\nclass ShowMale extends React.Component {\r\n    render() {\r\n        let maleArray = this.props.leads.filter((obj) => {\r\n                return obj.gender === \"male\";\r\n        });\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <h3 className=\"text-danger text-center\">Show Male</h3>\r\n                <hr />\r\n                <div className = \"row\" >\r\n                {\r\n                    maleArray.map((obj) => {\r\n                            return <div  className=\"col-md-3\" key={obj.email}>\r\n                                        <div className=\"card\" style= {{\r\n                                            width: \"15rem\"\r\n                                        }}>\r\n                                            <img src={obj.picture.large}  className=\"card-img-top\" alt=\"...\" />\r\n                                            <div className=\"card-body\">\r\n                                                <p className=\"card-text\">name: {obj.name.title} {obj.name.first} {obj.name.last}  </p>\r\n                                                <p className=\"card-text\">gender: {obj.gender}  </p>\r\n                                                <p className=\"card-text\">{obj.email}</p>\r\n                                                <p className=\"card-text\">phone: {obj.phone}</p>\r\n                                                <p>{`converted : ${obj.converted}`}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(stateMapper)(ShowMale);","import React from 'react';\r\nimport './App.css';\r\nimport {connect} from 'react-redux';\r\nimport {stateMapper} from '../store/store';\r\nimport {Redirect, Link} from 'react-router-dom';\r\n\r\nclass Navigation extends React.Component{\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch({\r\n      type: \"FETCH_LEAD\"\r\n    })\r\n  }\r\n\r\n  generateLead = () => {\r\n    this.props.dispatch({\r\n      type: \"FETCH_LEAD\"\r\n    })\r\n  }\r\n\r\n  countLead = () => {\r\n    let newleads = [...this.props.leads];\r\n    console.log(newleads);\r\n    let count = 0;\r\n    for (const lead of newleads) {\r\n      if (lead.converted) {\r\n        count++;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  showAll = () => {\r\n    console.log(\"show all\");\r\n    return <Redirect to = \"/showAll\" / >\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n        return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row mt-2 mb-2\">\r\n          <div className=\"col-md-6\">\r\n            <h3>Leads Converted: {this.countLead()}/{this.props.leads.length}</h3>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n          <button type=\"button\" className=\"btn btn-success mr-1\" onClick={this.generateLead}>Get Lead</button>\r\n          <Link type=\"button\" className=\"btn btn-primary mr-1\" to=\"/app/showAll\">Show All</Link>\r\n          <Link type=\"button\" className=\"btn btn-warning mr-1\" to=\"/app/showMale\">Show Male</Link>\r\n          <Link type=\"button\" className=\"btn btn-danger\" to=\"/app/showFemale\">Show Female</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default connect(stateMapper)(Navigation);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { stateMapper } from '../store/store';\r\n\r\nclass ShowFemale extends React.Component {\r\n    render() {\r\n        let maleArray = this.props.leads.filter((obj) => {\r\n                return obj.gender === \"female\";\r\n        });\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <h3 className=\"text-danger text-center\">Show Female</h3>\r\n                <hr />\r\n                <div className = \"row\" >\r\n                {\r\n                    maleArray.map((obj) => {\r\n                            return <div  className=\"col-md-3\" key={obj.email}>\r\n                                        <div className=\"card\" style= {{\r\n                                            width: \"15rem\"\r\n                                        }}>\r\n                                            <img src={obj.picture.large}  className=\"card-img-top\" alt=\"...\" />\r\n                                            <div className=\"card-body\">\r\n                                                <p className=\"card-text\">name: {obj.name.title} {obj.name.first} {obj.name.last}  </p>\r\n                                                <p className=\"card-text\">gender: {obj.gender}  </p>\r\n                                                <p className=\"card-text\">{obj.email}</p>\r\n                                                <p className=\"card-text\">phone: {obj.phone}</p>\r\n                                                <p>{`converted : ${obj.converted}`}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(stateMapper)(ShowFemale);","import React from 'react';\nimport './App.css';\nimport {Provider} from 'react-redux';\nimport LeadComponent from './Lead';\nimport {Route} from 'react-router-dom';\nimport ShowAllComponent from './ShowAllComponent';\nimport ShowMale from './ShowMale'\nimport {store} from '../store/store';\nimport Navigation from './Navigation';\nimport ShowFemale from './ShowFemale';\n\nclass App extends React.Component{\n\n\n  render() {\n        return (\n          <Provider store={store}>\n          <div>\n           <div className=\"container-fluid\">\n              <Navigation / >\n           </div>\n            <div className=\"container-fluid mt-3\">\n              <Route path=\"/app/showAll\" component={ShowAllComponent} />\n              <Route path=\"/app/showMale\" component={ShowMale} />\n              <Route path=\"/app/showFemale\" component={ShowFemale} />\n            </div>\n            <hr />\n            <div className=\"container-fluid mt-3\">\n              <LeadComponent / >\n            </div>\n           </div> \n          </Provider>\n    );\n  }\n \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {BrowserRouter, Route, Redirect} from 'react-router-dom';\n\nclass Home extends React.Component {\n\n  doRedirect = () => {\n      return <Redirect to=\"/app\" />\n  }\n\n    render() {\n        // let login = false;\n\n        return (\n          <BrowserRouter>\n            <Route path=\"/app\" component={App} />\n            {this.doRedirect()}\n          </BrowserRouter>\n          // <div>\n          //     {\n          //         login ? <App /> : <Login />\n          //     }\n          //     {/* <App />\n          //     <Login /> */}\n          // </div>\n        );\n    }\n}\n\nReactDOM.render(<Home />, document.getElementById('root'));\n"],"sourceRoot":""}